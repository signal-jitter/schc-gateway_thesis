Init statsct module
[statsct] Statsct test
packet_size - > 640
packet_size - > 640
Init statsct module
[statsct] Statsct test
0 [sim] add-link 0->1
0 [sim] add-link 1->0
SCHC device L3=2001:0db8:85a3:0000:0000:0000:0000:0000 L2=0 RM={'_db': [{'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}]}
SCHC gw     L3=2001:0db8:85a3:0000:0000:0000:0000:0001 L2=1 RM={'_db': [{'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}]}
rules -> {'_db': [{'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}]}, {'_db': [{'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}]}
[{'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}]
info -> {'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}
[statsct] rule configure device -> {'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}
[{'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}]
info -> {'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}
[statsct] rule configure gw -> {'fragSender': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 2, "ruleLength": 6}, 'fragReceiver': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dstIID': '*', 'devL2Addr': '*', 'comp': {"ruleID": 5, "compression": {"rule_set": []}, "ruleLength": 3}}
[statsct] src_id -> 0
[statsct] dst_id -> 1
0 [L3] @0 send-later Devaddr=2001:0db8:85a3:0000:0000:0000:0000:0001 Packet=0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f80
Add event []
callback set -> schc_send
[statsct] real_packet, bytearray(b'\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80')
[statsct] real_packet_size, 640
1 [schc] @0 recv-from-L3 -> 2001:0db8:85a3:0000:0000:0000:0000:0001 bytearray(b'\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80')
1 [schc] @0 compression rule_id=5
1 [schc] @0 compress: b'\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80'/5120=>b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x00'/5123
1 [schc] @0 fragmentation rule_id=1
t:{'sent': False, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 0 2 [1]
t:{'sent': False, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 0 1 [1, 1]
t:{'sent': False, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}
MBL1 nb= 1
MBL3 wn:tn:nb= 0 0 [1, 1, 1]
t:{'sent': False, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 1 2 [1]
t:{'sent': False, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 1 1 [1, 1]
t:{'sent': False, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}
MBL1 nb= 1
MBL3 wn:tn:nb= 1 0 [1, 1, 1]
t:{'sent': False, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 2 2 [1]
t:{'sent': False, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 2 1 [1, 1]
t:{'sent': False, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}
MBL1 nb= 1
MBL3 wn:tn:nb= 2 0 [1, 1, 1]
t:{'sent': False, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 3 2 [1]
t:{'sent': False, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 3 1 [1, 1]
t:{'sent': False, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}
MBL1 nb= 1
MBL3 wn:tn:nb= 3 0 [1, 1, 1]
t:{'sent': False, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}
MBL1 nb= 1
MBL4 wn:tn:nb= 4 2 [1]
t:{'sent': False, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}
MBL1 nb= 1
MBL4 wn:tn:nb= 4 1 [1, 1]
bit_list: {0: [1, 1, 1], 1: [1, 1, 1], 2: [1, 1, 1], 3: [1, 1, 1], 4: [1, 1]}
w: 0, t: 2, sent: False
w: 0, t: 1, sent: False
w: 0, t: 0, sent: False
w: 1, t: 2, sent: False
w: 1, t: 1, sent: False
w: 1, t: 0, sent: False
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
bitmap: [1, 1, 1], length:3
bitmap: [1, 1, 1], length:3
bitmap: [1, 1, 1], length:3
bitmap: [1, 1, 1], length:3
bitmap: [1, 1], length:2
number of windows = 5

1559123647.859246 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: False
w: 0, t: 1, sent: False
w: 0, t: 0, sent: False
w: 1, t: 2, sent: False
w: 1, t: 1, sent: False
w: 1, t: 0, sent: False
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}], nb_remaining_tiles: 13, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}]
frag sent: {'fcn': 2, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 0, 'bitmap': None, 'packet': b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x30'/405, 'abort': False, 'payload': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}
Add event []
callback set -> send_packet
Queue running event -> 0, callback -> schc_send
<bound_method 7f91a8c481a0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), 0, None, <bound_method 7f91a8c481a0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 23.4375 < 10 *rate  -> 100
1 [sim] ----------------------- KO -----------------------
1 [sim] packet was lost 0->None
[statsct] packet was lost 0->None bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00')
total_data_send -> 51
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), 'src_dev_id': 0, 'status': False, 'header_size': 13, 'time': 1559123647.879746}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 2793.472
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
EVENT SEND FRAG
1559123647.880941 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: False
w: 0, t: 0, sent: False
w: 1, t: 2, sent: False
w: 1, t: 1, sent: False
w: 1, t: 0, sent: False
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}], nb_remaining_tiles: 12, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}]
frag sent: {'fcn': 1, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 0, 'bitmap': None, 'packet': b'\x05\x09\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x60'/405, 'abort': False, 'payload': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}
Add event []
callback set -> send_packet
Queue running event -> 1, callback -> send_packet
<bound_method 7f91a8c96240 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05\t23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`a`'), 0, None, <bound_method 7f91a8c96240 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 367.1875 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05\t23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`a`')
[statsct] send-packet 0->None bytearray(b'\x05\t23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`a`')
total_data_send -> 102
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05\t23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`a`'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123647.92209}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 5586.944000000001
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\t23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`a`')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
New reassembly session created <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x09\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x60'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x09\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x60'/408
set_recvbuf -> b'\x05\x09\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x60'/408
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x09\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x60'/0[408:408], 'mic': None, 'payload': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 1, 'cbit': None, 'dtag': 1, 'win': 0}
tile found that is smaller than a normal tile
Add event []
callback set -> event_inactive
--- 1
EVENT SEND FRAG
1559123647.956524 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: False
w: 1, t: 2, sent: False
w: 1, t: 1, sent: False
w: 1, t: 0, sent: False
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}], nb_remaining_tiles: 11, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}]
frag sent: {'fcn': 0, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 0, 'bitmap': None, 'packet': b'\x05\x02\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90'/405, 'abort': False, 'payload': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}
Add event [(301, 3, <bound_method 7f91a8ccf3a0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 2, callback -> send_packet
<bound_method 7f91a8b40c00 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05\x02cdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90'), 0, None, <bound_method 7f91a8b40c00 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 613.28125 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05\x02cdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90')
[statsct] send-packet 0->None bytearray(b'\x05\x02cdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90')
total_data_send -> 153
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05\x02cdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123647.988931}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 8380.416000000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x02cdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x02\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x02\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90'/408
set_recvbuf -> b'\x05\x02\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90'/408
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x02\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90'/0[408:408], 'mic': None, 'payload': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 0}
tile found that is smaller than a normal tile
Add event []
callback set -> event_inactive
--- 0
EVENT SEND FRAG
1559123648.033103 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: False
w: 1, t: 1, sent: False
w: 1, t: 0, sent: False
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}], nb_remaining_tiles: 10, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}]
frag sent: {'fcn': 2, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 1, 'bitmap': None, 'packet': b'\x05\x33\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0'/405, 'abort': False, 'payload': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}
Add event [(301, 5, <bound_method 7f91a8b7a900 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 4, callback -> send_packet
<bound_method 7f91a8bc3c00 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x053\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0'), 0, None, <bound_method 7f91a8bc3c00 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 867.1875 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x053\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0')
[statsct] send-packet 0->None bytearray(b'\x053\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0')
total_data_send -> 204
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x053\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123648.066713}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 11173.888
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x053\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x33\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x33\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0'/408
set_recvbuf -> b'\x05\x33\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0'/408
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x33\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0'/0[408:408], 'mic': None, 'payload': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 2, 'cbit': None, 'dtag': 1, 'win': 1}
tile found that is smaller than a normal tile
Add event []
callback set -> event_inactive
--- 2
EVENT SEND FRAG
1559123648.099371 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: False
w: 1, t: 0, sent: False
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}], nb_remaining_tiles: 9, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}]
frag sent: {'fcn': 1, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 1, 'bitmap': None, 'packet': b'\x05\x2c\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0'/405, 'abort': False, 'payload': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}
Add event [(301, 7, <bound_method 7f91a8bfe320 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 6, callback -> send_packet
<bound_method 7f91a8c48f60 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05,\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0'), 0, None, <bound_method 7f91a8c48f60 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 406.25 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05,\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0')
[statsct] send-packet 0->None bytearray(b'\x05,\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0')
total_data_send -> 255
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05,\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123648.134607}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 13967.36
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05,\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x2c\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x2c\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0'/408
set_recvbuf -> b'\x05\x2c\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0'/408
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x2c\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0'/0[408:408], 'mic': None, 'payload': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 1, 'cbit': None, 'dtag': 1, 'win': 1}
tile found that is smaller than a normal tile
Add event []
callback set -> event_inactive
--- 1
EVENT SEND FRAG
1559123648.166114 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: False
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}], nb_remaining_tiles: 8, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}]
frag sent: {'fcn': 0, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 1, 'bitmap': None, 'packet': b'\x05\x25\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x20'/405, 'abort': False, 'payload': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}
Add event [(301, 9, <bound_method 7f91a8c83b20 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 8, callback -> send_packet
<bound_method 7f91a8ccaba0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), 0, None, <bound_method 7f91a8ccaba0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 11.71875 < 10 *rate  -> 100
1 [sim] ----------------------- KO -----------------------
1 [sim] packet was lost 0->None
[statsct] packet was lost 0->None bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% ')
total_data_send -> 306
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), 'src_dev_id': 0, 'status': False, 'header_size': 13, 'time': 1559123648.199749}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 16760.832
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
EVENT SEND FRAG
1559123648.201797 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}], nb_remaining_tiles: 7, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}]
frag sent: {'fcn': 2, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x56\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x50'/405, 'abort': False, 'payload': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}
Add event [(301, 9, <bound_method 7f91a8c83b20 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 10, callback -> send_packet
<bound_method 7f91a8b41f40 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), 0, None, <bound_method 7f91a8b41f40 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 11.71875 < 10 *rate  -> 100
1 [sim] ----------------------- KO -----------------------
1 [sim] packet was lost 0->None
[statsct] packet was lost 0->None bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP")
total_data_send -> 357
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), 'src_dev_id': 0, 'status': False, 'header_size': 13, 'time': 1559123648.233756}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 19554.30400000001
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
EVENT SEND FRAG
1559123648.23485 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: False
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}], nb_remaining_tiles: 6, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}]
frag sent: {'fcn': 1, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x4f\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'/405, 'abort': False, 'payload': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}
Add event [(301, 9, <bound_method 7f91a8c83b20 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 11, callback -> send_packet
<bound_method 7f91a8b91200 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), 0, None, <bound_method 7f91a8b91200 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 82.03125 < 10 *rate  -> 100
1 [sim] ----------------------- KO -----------------------
1 [sim] packet was lost 0->None
[statsct] packet was lost 0->None bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88')
total_data_send -> 408
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), 'src_dev_id': 0, 'status': False, 'header_size': 13, 'time': 1559123648.267085}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 22347.77600000001
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
EVENT SEND FRAG
1559123648.268732 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: False
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}], nb_remaining_tiles: 5, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}]
frag sent: {'fcn': 0, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8'/405, 'abort': False, 'payload': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}
Add event [(301, 9, <bound_method 7f91a8c83b20 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 12, callback -> send_packet
<bound_method 7f91a8be00e0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8'), 0, None, <bound_method 7f91a8be00e0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 820.3125 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05@\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8')
[statsct] send-packet 0->None bytearray(b'\x05@\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8')
total_data_send -> 459
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05@\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123648.30103}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 25141.24800000001
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05@\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x40\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x40\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8'/408
set_recvbuf -> b'\x05\x40\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8'/408
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x40\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8'/0[408:408], 'mic': None, 'payload': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
tile found that is smaller than a normal tile
Add event []
callback set -> event_inactive
--- 0
EVENT SEND FRAG
1559123648.334271 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: False
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}], nb_remaining_tiles: 4, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}]
frag sent: {'fcn': 2, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 3, 'bitmap': None, 'packet': b'\x05\x71\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xe8'/405, 'abort': False, 'payload': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}
Add event [(301, 14, <bound_method 7f91a8c1abe0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 13, callback -> send_packet
<bound_method 7f91a8c651a0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05q\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xe8'), 0, None, <bound_method 7f91a8c651a0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 66.40625 < 10 *rate  -> 100
1 [sim] ----------------------- KO -----------------------
1 [sim] packet was lost 0->None
[statsct] packet was lost 0->None bytearray(b'\x05q\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xe8')
total_data_send -> 510
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05q\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xe8'), 'src_dev_id': 0, 'status': False, 'header_size': 13, 'time': 1559123648.365464}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 27934.72000000001
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
EVENT SEND FRAG
1559123648.367157 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: False
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}], nb_remaining_tiles: 3, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}]
frag sent: {'fcn': 1, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 3, 'bitmap': None, 'packet': b'\x05\x6a\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18'/405, 'abort': False, 'payload': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}
Add event [(301, 14, <bound_method 7f91a8c1abe0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 15, callback -> send_packet
<bound_method 7f91a8cb33c0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05j\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18'), 0, None, <bound_method 7f91a8cb33c0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 175.78125 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05j\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18')
[statsct] send-packet 0->None bytearray(b'\x05j\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18')
total_data_send -> 561
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05j\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123648.403533}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 30728.19200000001
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05j\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x6a\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x6a\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18'/408
set_recvbuf -> b'\x05\x6a\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18'/408
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x6a\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18'/0[408:408], 'mic': None, 'payload': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 1, 'cbit': None, 'dtag': 1, 'win': 3}
tile found that is smaller than a normal tile
Add event []
callback set -> event_inactive
--- 1
EVENT SEND FRAG
1559123648.440506 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: False
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}], nb_remaining_tiles: 2, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}]
frag sent: {'fcn': 0, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 3, 'bitmap': None, 'packet': b'\x05\x63\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x48'/405, 'abort': False, 'payload': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}
Add event [(301, 17, <bound_method 7f91a8b16080 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 16, callback -> send_packet
<bound_method 7f91a8b5e3e0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05c\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKH'), 0, None, <bound_method 7f91a8b5e3e0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 687.5 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05c\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKH')
[statsct] send-packet 0->None bytearray(b'\x05c\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKH')
total_data_send -> 612
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05c\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKH'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123648.48477}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 33521.66400000001
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05c\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKH')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x63\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x48'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x63\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x48'/408
set_recvbuf -> b'\x05\x63\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x48'/408
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x63\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x48'/0[408:408], 'mic': None, 'payload': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 3}
tile found that is smaller than a normal tile
Add event []
callback set -> event_inactive
--- 0
EVENT SEND FRAG
1559123648.518278 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: False
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}], nb_remaining_tiles: 1, remaining_size: 3
window_tiles is not None -> False, resend -> False
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}]
frag sent: {'fcn': 2, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 4, 'bitmap': None, 'packet': b'\x05\x94\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x78'/405, 'abort': False, 'payload': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}
Add event [(301, 19, <bound_method 7f91a8b97aa0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 18, callback -> send_packet
<bound_method 7f91a8be11a0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05\x94MNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|x'), 0, None, <bound_method 7f91a8be11a0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 640.625 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05\x94MNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|x')
[statsct] send-packet 0->None bytearray(b'\x05\x94MNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|x')
total_data_send -> 663
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05\x94MNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|x'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123648.548862}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 36315.13600000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x94MNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|x')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x94\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x78'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x94\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x78'/408
set_recvbuf -> b'\x05\x94\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x78'/408
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x94\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x78'/0[408:408], 'mic': None, 'payload': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 2, 'cbit': None, 'dtag': 1, 'win': 4}
tile found that is smaller than a normal tile
Add event []
callback set -> event_inactive
--- 2
EVENT SEND FRAG
1559123648.581149 send_frag!!!!!!!!!!!!!!!!!
all1_send-> False, resend -> False, state -> START
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: False
window tiles: [{'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}], nb_remaining_tiles: 0, remaining_size: 368
window_tiles is not None -> False, resend -> False
ALL-1 prepared
Send MIC 3424120141, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 641
mic_sent -> b'\xcc\x17\xedM'
msg_type -> SCHC_ALL_1, msg_queue -> ['SCHC_ALL_1']
header_size -> {'header_size': 45}
mic is not None
all ones
Add event [(301, 21, <bound_method 7f91a8c1bba0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> ack_timeout
*******event id 22
self.last_window_tiles -> [{'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
frag sent: {'fcn': 3, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': b'\xcc\x17\xedM', 'win': 4, 'bitmap': None, 'packet': b'\x05\x9e\x60\xbf\x6a\x6d\x7e\x7f\x80'/72, 'abort': False, 'payload': b'\xaf\xcf\xf0\x00'/27}
Add event [(301, 21, <bound_method 7f91a8c1bba0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ()), (251, 22, <bound_method 7f91a8c256e0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c25660>, 4))]
callback set -> send_packet
Queue running event -> 20, callback -> send_packet
<bound_method 7f91a8c2b9e0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05\x9e`\xbfjm~\x7f\x80'), 0, None, <bound_method 7f91a8c2b9e0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 234.375 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05\x9e`\xbfjm~\x7f\x80')
[statsct] send-packet 0->None bytearray(b'\x05\x9e`\xbfjm~\x7f\x80')
total_data_send -> 672
[statsct] {'toa_calculator': {'t_payload': 1081.344, 'v_ceil': 4.3, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 33, 'v_DE': 1, 't_packet': 1482.752, 't_sym': 32.768}, 'packet_length': 9, 'toa_packet': 1482.752, 'time_off': 146792.448, 'dst_dev_id': None, 'packet': bytearray(b'\x05\x9e`\xbfjm~\x7f\x80'), 'src_dev_id': 0, 'status': True, 'header_size': 45, 'time': 1559123648.617984}
SCHC_ALL_1
msg_type_queue -> []
channel_occupancy -> 37797.88800000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x9e`\xbfjm~\x7f\x80')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x9e\x60\xbf\x6a\x6d\x7e\x7f\x80'/72, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x9e\x60\xbf\x6a\x6d\x7e\x7f\x80'/72
set_recvbuf -> b'\x05\x9e\x60\xbf\x6a\x6d\x7e\x7f\x80'/72
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x9e\x60\xbf\x6a\x6d\x7e\x7f\x80'/0[72:72], 'mic': bytearray(b'\xcc\x17\xedM'), 'payload': b'\xaf\xcf\xf0\x00'/27, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 3, 'cbit': None, 'dtag': 1, 'win': 4}
tile found that is smaller than a normal tile
----------------------- ALL1 received -----------------------
tile_list:
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3667997981, base = bytearray(b'&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 396
schc_frag.mic: bytearray(b'\xcc\x17\xedM'), mic_calced: b'\xda\xa15\x1d'
----------------------- ERROR -----------------------
ERROR: MIC mismatched. packet bytearray(b'\xcc\x17\xedM') != result b'\xda\xa15\x1d'
make_bit_list_mic_ko
MBL1 nb= 1
MBL2 wn:tn:nb= 0 1 [0]
MBL4 wn:tn:nb= 0 1 [0, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 0 0 [0, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 1 [1, 1]
MBL00 wn:tn:nb= 1 0 [1, 1]
MBL01 wn:tn:nb= 2 2 [1, 1, 0]
MBL1 nb= 1
MBL2 wn:tn:nb= 2 1 [0]
MBL2 wn:tn:nb= 2 0 [0, 0]
MBL3 wn:tn:nb= 2 0 [0, 0, 1]
MBL1 nb= 1
MBL2 wn:tn:nb= 3 1 [0]
MBL4 wn:tn:nb= 3 1 [0, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 3 0 [0, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 4 2 [1]
all ones found:wn:4, tn:3, nbt:1, tni:1
nb_tiles 1
a tile in the last fragment but we dont know the tile number
append 1
[1, 0, 1]
find_missing_tiles_mic_ko_yes_all_1 - bit_list -> {0: [0, 1, 1], 1: [1, 1, 0], 2: [0, 0, 1], 3: [0, 1, 1], 4: [1, 0, 1]}, lenght: 5
 i, all(i[1]) (0, [0, 1, 1]),False
 i, all(i[1]) (1, [1, 1, 0]),False
 i, all(i[1]) (2, [0, 0, 1]),False
 i, all(i[1]) (3, [0, 1, 1]),False
 i, all(i[1]) (4, [1, 0, 1]),False
find_missing_tiles_mic_ko_yes_all_1 ret -> [(0, b'\x60'/3), (1, b'\xc0'/3), (2, b'\x20'/3), (3, b'\x60'/3), (4, b'\xa0'/3)]
missing wn=0 bitmap=b'\x60'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 0, 'bitmap': b'\x60'/3, 'packet': b'\x05\x06'/15, 'abort': False, 'payload': None}
Add event [(251, 22, <bound_method 7f91a8c256e0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c25660>, 4))]
callback set -> send_packet
missing wn=1 bitmap=b'\xc0'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 1, 'bitmap': b'\xc0'/3, 'packet': b'\x05\x2c'/15, 'abort': False, 'payload': None}
Add event [(251, 22, <bound_method 7f91a8c256e0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c25660>, 4)), (1, 24, <bound_method 7f91a8c6d0c0 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x06'), '*'))]
callback set -> send_packet
missing wn=2 bitmap=b'\x20'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 2, 'bitmap': b'\x20'/3, 'packet': b'\x05\x42'/15, 'abort': False, 'payload': None}
Add event [(251, 22, <bound_method 7f91a8c256e0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c25660>, 4)), (1, 24, <bound_method 7f91a8c6d0c0 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x06'), '*')), (1, 25, <bound_method 7f91a8c74080 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05,'), '*'))]
callback set -> send_packet
missing wn=3 bitmap=b'\x60'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 3, 'bitmap': b'\x60'/3, 'packet': b'\x05\x66'/15, 'abort': False, 'payload': None}
Add event [(251, 22, <bound_method 7f91a8c256e0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c25660>, 4)), (1, 24, <bound_method 7f91a8c6d0c0 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x06'), '*')), (1, 25, <bound_method 7f91a8c74080 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05,'), '*')), (1, 26, <bound_method 7f91a8c7b220 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05B'), '*'))]
callback set -> send_packet
missing wn=4 bitmap=b'\xa0'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 4, 'bitmap': b'\xa0'/3, 'packet': b'\x05\x8a'/15, 'abort': False, 'payload': None}
Add event [(251, 22, <bound_method 7f91a8c256e0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c25660>, 4)), (1, 24, <bound_method 7f91a8c6d0c0 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x06'), '*')), (1, 25, <bound_method 7f91a8c74080 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05,'), '*')), (1, 26, <bound_method 7f91a8c7b220 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05B'), '*')), (1, 27, <bound_method 7f91a8c82440 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05f'), '*'))]
callback set -> send_packet
Add event [(251, 22, <bound_method 7f91a8c256e0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c25660>, 4)), (1, 24, <bound_method 7f91a8c6d0c0 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x06'), '*')), (1, 25, <bound_method 7f91a8c74080 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05,'), '*')), (1, 26, <bound_method 7f91a8c7b220 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05B'), '*')), (1, 27, <bound_method 7f91a8c82440 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05f'), '*')), (1, 28, <bound_method 7f91a8c89900 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x8a'), '*'))]
callback set -> event_inactive
--- 3
EVENT SEND FRAG
1559123648.84809 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> False, state -> SEND_ALL_1
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
self.mic_sent is not None state -> SEND_ALL_1
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 23, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05\x06'), 1, None, None
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 675.78125 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 1->None bytearray(b'\x05\x06')
[statsct] send-packet 1->None bytearray(b'\x05\x06')
total_data_send -> 674
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x06'), 'status': True, 'time': 1559123648.868911, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
channel_occupancy -> 38952.96000000002
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
1 [node] @0 ----------------------- RECEIVED PACKET -----------------------
1 [node] @0 recv from 1
1 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x06')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x06'/16
set_recvbuf -> b'\x05\x06'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 0, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\x60'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x06'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (0, [0, 1, 1])
sent bitmap: (0, [1, 1, 1])
unset_sent_flag
bit_list -> [0, 1, 1]
self.max_w_num:4 win:0, len(bit_list[:-1]):2
not last window
unset_sent_flag_do
counter = 1, t-num 2, tn 0
self.all_tiles -> [{'sent': False, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123648.889104 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: False
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}], nb_remaining_tiles: 0, remaining_size: 3
window_tiles is not None -> True, resend -> True
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}]
frag sent: {'fcn': 2, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 0, 'bitmap': None, 'packet': b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x30'/405, 'abort': False, 'payload': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}
Add event [(1, 25, <bound_method 7f91a8c74080 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05,'), '*')), (1, 26, <bound_method 7f91a8c7b220 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05B'), '*')), (1, 27, <bound_method 7f91a8c82440 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05f'), '*')), (1, 28, <bound_method 7f91a8c89900 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x8a'), '*')), (301, 29, <bound_method 7f91a8c899a0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 24, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05,'), 1, None, None
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 136.71875 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 1->None bytearray(b'\x05,')
[statsct] send-packet 1->None bytearray(b'\x05,')
total_data_send -> 676
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'toa_packet': 1155.072, 'time_off': 114352.128, 'dst_dev_id': None, 'packet': bytearray(b'\x05,'), 'src_dev_id': 1, 'status': True, 'header_size': 13, 'time': 1559123648.916402}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_FRAG']
channel_occupancy -> 40108.03200000002
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
1 [node] @0 ----------------------- RECEIVED PACKET -----------------------
1 [node] @0 recv from 1
1 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05,')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x2c'/16
set_recvbuf -> b'\x05\x2c'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 1, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\xc0'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x2c'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (1, [1, 1, 0])
sent bitmap: (1, [1, 1, 1])
unset_sent_flag
bit_list -> [1, 1, 0]
self.max_w_num:4 win:1, len(bit_list[:-1]):2
not last window
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 0, tn 2
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': False, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123648.945921 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: False
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: [{'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}], nb_remaining_tiles: 0, remaining_size: 3
window_tiles is not None -> True, resend -> True
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_FRAG', 'SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}]
frag sent: {'fcn': 0, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 1, 'bitmap': None, 'packet': b'\x05\x25\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x20'/405, 'abort': False, 'payload': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}
Add event [(1, 26, <bound_method 7f91a8c7b220 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05B'), '*')), (1, 27, <bound_method 7f91a8c82440 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05f'), '*')), (1, 28, <bound_method 7f91a8c89900 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x8a'), '*')), (1, 30, <bound_method 7f91a8b20120 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), '*', <bound_method 7f91a8b1b880 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (301, 29, <bound_method 7f91a8c899a0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 25, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05B'), 1, None, None
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 414.0625 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 1->None bytearray(b'\x05B')
[statsct] send-packet 1->None bytearray(b'\x05B')
total_data_send -> 678
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'toa_packet': 1155.072, 'time_off': 114352.128, 'dst_dev_id': None, 'packet': bytearray(b'\x05B'), 'src_dev_id': 1, 'status': True, 'header_size': 13, 'time': 1559123648.97784}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_FRAG', 'SCHC_FRAG']
channel_occupancy -> 41263.10400000001
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
1 [node] @0 ----------------------- RECEIVED PACKET -----------------------
1 [node] @0 recv from 1
1 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05B')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x42'/16
set_recvbuf -> b'\x05\x42'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 2, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\x20'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x42'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (2, [0, 0, 1])
sent bitmap: (2, [1, 1, 1])
unset_sent_flag
bit_list -> [0, 0, 1]
self.max_w_num:4 win:2, len(bit_list[:-1]):2
not last window
unset_sent_flag_do
counter = 1, t-num 2, tn 0
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 1, tn 1
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': False, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': False, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123648.999269 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: False
w: 2, t: 1, sent: False
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: [{'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}], nb_remaining_tiles: 1, remaining_size: 3
window_tiles is not None -> True, resend -> True
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_FRAG', 'SCHC_FRAG', 'SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}]
frag sent: {'fcn': 2, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x56\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x50'/405, 'abort': False, 'payload': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}
Add event [(1, 27, <bound_method 7f91a8c82440 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05f'), '*')), (1, 28, <bound_method 7f91a8c89900 <SimulLayer2 object at 7f91a8b0e300>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x8a'), '*')), (1, 30, <bound_method 7f91a8b20120 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), '*', <bound_method 7f91a8b1b880 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (1, 31, <bound_method 7f91a8b89ee0 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), '*', <bound_method 7f91a8b85660 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (301, 29, <bound_method 7f91a8c899a0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 26, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05f'), 1, None, None
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 35.15625 < 10 *rate  -> 100
1 [sim] ----------------------- KO -----------------------
1 [sim] packet was lost 1->None
[statsct] packet was lost 1->None bytearray(b'\x05f')
total_data_send -> 680
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'toa_packet': 1155.072, 'time_off': 114352.128, 'dst_dev_id': None, 'packet': bytearray(b'\x05f'), 'src_dev_id': 1, 'status': False, 'header_size': 13, 'time': 1559123649.033347}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_FRAG', 'SCHC_FRAG', 'SCHC_FRAG']
channel_occupancy -> 42418.17600000002
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
Queue running event -> 27, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05\x8a'), 1, None, None
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 371.09375 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 1->None bytearray(b'\x05\x8a')
[statsct] send-packet 1->None bytearray(b'\x05\x8a')
total_data_send -> 682
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123649.044303, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_FRAG', 'SCHC_FRAG', 'SCHC_FRAG']
channel_occupancy -> 43573.24800000002
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
1 [node] @0 ----------------------- RECEIVED PACKET -----------------------
1 [node] @0 recv from 1
1 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x8a')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x8a'/16
set_recvbuf -> b'\x05\x8a'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 4, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\xa0'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x8a'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (4, [1, 0, 1])
sent bitmap: (4, [1, 1])
unset_sent_flag
bit_list -> [1, 0, 1]
self.max_w_num:4 win:4, len(bit_list[:-1]):2
last window
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': False, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
bi -> 0
bi -> 1
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 1, tn 1
bi -> 2
Problem in tx, the last bit is set as 1
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': False, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': False, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': False, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123649.085289 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: False
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: [{'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}], nb_remaining_tiles: 0, remaining_size: 3
window_tiles is not None -> True, resend -> True
regular SCHC frag
msg_type -> SCHC_FRAG, msg_queue -> ['SCHC_FRAG', 'SCHC_FRAG', 'SCHC_FRAG', 'SCHC_FRAG']
header_size -> {'header_size': 13}
self.last_window_tiles -> [{'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}]
frag sent: {'fcn': 1, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x4f\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'/405, 'abort': False, 'payload': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}
Add event [(1, 30, <bound_method 7f91a8b20120 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), '*', <bound_method 7f91a8b1b880 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (1, 31, <bound_method 7f91a8b89ee0 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), '*', <bound_method 7f91a8b85660 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (1, 32, <bound_method 7f91a8bf5080 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), '*', <bound_method 7f91a8bf0780 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (301, 29, <bound_method 7f91a8c899a0 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> send_packet
Queue running event -> 28, callback -> send_packet
<bound_method 7f91a8b1b880 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), 0, None, <bound_method 7f91a8b1b880 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 250.0 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00')
[statsct] send-packet 0->None bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00')
total_data_send -> 733
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'toa_packet': 2793.472, 'time_off': 276553.728, 'dst_dev_id': None, 'packet': bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), 'src_dev_id': 0, 'status': True, 'header_size': 13, 'time': 1559123649.126075}
SCHC_FRAG
msg_type_queue -> ['SCHC_FRAG', 'SCHC_FRAG', 'SCHC_FRAG']
channel_occupancy -> 46366.72000000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x30'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x30'/408
set_recvbuf -> b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x30'/408
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x30'/0[408:408], 'mic': None, 'payload': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 2, 'cbit': None, 'dtag': 1, 'win': 0}
tile found that is smaller than a normal tile
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 2285934056, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 445
waiting for more fragments.
Add event [(1, 31, <bound_method 7f91a8b89ee0 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), '*', <bound_method 7f91a8b85660 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (1, 32, <bound_method 7f91a8bf5080 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), '*', <bound_method 7f91a8bf0780 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (1, 33, <bound_method 7f91a8c83f80 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), '*', <bound_method 7f91a8c7f580 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>))]
callback set -> event_inactive
--- 2
EVENT SEND FRAG
1559123649.249125 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
Add event [(1, 31, <bound_method 7f91a8b89ee0 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), '*', <bound_method 7f91a8b85660 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (1, 32, <bound_method 7f91a8bf5080 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), '*', <bound_method 7f91a8bf0780 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (1, 33, <bound_method 7f91a8c83f80 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), '*', <bound_method 7f91a8c7f580 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (301, 34, <bound_method 7f91a8b42080 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> ack_timeout
*******event id 35
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 30, callback -> send_packet
<bound_method 7f91a8b85660 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), 0, None, <bound_method 7f91a8b85660 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 542.96875 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% ')
[statsct] send-packet 0->None bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% ')
total_data_send -> 784
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'time_off': 276553.728, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), 'status': True, 'time': 1559123649.27216, 'toa_packet': 2793.472}
SCHC_FRAG
msg_type_queue -> ['SCHC_FRAG', 'SCHC_FRAG']
channel_occupancy -> 49160.19200000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% ')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x25\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x20'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x25\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x20'/408
set_recvbuf -> b'\x05\x25\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x20'/408
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x25\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x20'/0[408:408], 'mic': None, 'payload': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 1}
tile found that is smaller than a normal tile
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 964957743, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 494
waiting for more fragments.
Add event [(1, 32, <bound_method 7f91a8bf5080 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), '*', <bound_method 7f91a8bf0780 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (1, 33, <bound_method 7f91a8c83f80 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), '*', <bound_method 7f91a8c7f580 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (251, 35, <bound_method 7f91a8b46e80 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8b46e40>, 2))]
callback set -> event_inactive
--- 0
EVENT SEND FRAG
1559123649.399029 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 31, callback -> send_packet
<bound_method 7f91a8bf0780 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), 0, None, <bound_method 7f91a8bf0780 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 488.28125 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP")
[statsct] send-packet 0->None bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP")
total_data_send -> 835
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'time_off': 276553.728, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), 'status': True, 'time': 1559123649.41943, 'toa_packet': 2793.472}
SCHC_FRAG
msg_type_queue -> ['SCHC_FRAG']
channel_occupancy -> 51953.66400000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP")
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x56\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x50'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x56\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x50'/408
set_recvbuf -> b'\x05\x56\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x50'/408
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x56\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x50'/0[408:408], 'mic': None, 'payload': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 2, 'cbit': None, 'dtag': 1, 'win': 2}
tile found that is smaller than a normal tile
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3421429916, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 543
waiting for more fragments.
Add event [(1, 33, <bound_method 7f91a8c83f80 <SimulLayer2 object at 7f91a8b0a5a0>.<function send_packet at 0x7f91a8af1c80>>, (bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), '*', <bound_method 7f91a8c7f580 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>)), (251, 35, <bound_method 7f91a8b46e80 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8b46e40>, 2))]
callback set -> event_inactive
--- 2
EVENT SEND FRAG
1559123649.546457 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 32, callback -> send_packet
<bound_method 7f91a8c7f580 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), 0, None, <bound_method 7f91a8c7f580 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 777.34375 < 10 *rate  -> 100
1 [sim] ----------------------- OK -----------------------
1 [sim] send-packet 0->None bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88')
[statsct] send-packet 0->None bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88')
total_data_send -> 886
[statsct] {'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'time_off': 276553.728, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), 'status': True, 'time': 1559123649.561927, 'toa_packet': 2793.472}
SCHC_FRAG
msg_type_queue -> []
channel_occupancy -> 54747.13600000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1 [node] @1 recv from 0
1 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x4f\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'/408, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x4f\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'/408
set_recvbuf -> b'\x05\x4f\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'/408
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x4f\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'/0[408:408], 'mic': None, 'payload': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 1, 'cbit': None, 'dtag': 1, 'win': 2}
tile found that is smaller than a normal tile
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3612560977, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 592
waiting for more fragments.
Add event [(251, 35, <bound_method 7f91a8b46e80 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8b46e40>, 2))]
callback set -> event_inactive
--- 1
EVENT SEND FRAG
1559123649.685381 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 33, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 1
Add event [(301, 38, <bound_method 7f91a8b98700 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ())]
callback set -> ack_timeout
*******event id 39
msg_type -> SCHC_ACK_REQ, msg_queue -> ['SCHC_ACK_REQ']
SCHC ACK REQ frag: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40'/13, 'abort': False, 'payload': None}
Add event [(301, 38, <bound_method 7f91a8b98700 <ReassemblerAckOnError object at 7f91a8ca1a60>.<function event_inactive at 0x7f91a8ae5460>>, ()), (501, 39, <bound_method 7f91a8b63100 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8b46e40>, 2))]
callback set -> send_packet
Queue running event -> 35, callback -> ack_timeout
<bound_method 7f91a8cbd260 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@'), 0, None, <bound_method 7f91a8cbd260 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
251 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 617.1875 < 10 *rate  -> 100
251 [sim] ----------------------- OK -----------------------
251 [sim] send-packet 0->None bytearray(b'\x05@')
[statsct] send-packet 0->None bytearray(b'\x05@')
total_data_send -> 888
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123649.706095, 'toa_packet': 1155.072}
SCHC_ACK_REQ
msg_type_queue -> []
channel_occupancy -> 55902.20800000003
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
251 [node] @1 ----------------------- RECEIVED PACKET -----------------------
251 [node] @1 recv from 0
251 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05@')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x40'/16, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x40'/16
set_recvbuf -> b'\x05\x40'/16
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
Received ACK-REQ
XXX need sending ACK back.
resend ack method
{'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3612560977, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 592
schc_frag.mic: bytearray(b'\xcc\x17\xedM'), mic_calced: b'\xd7SNQ'
all-1 received, building ACK
send ack before done [{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}],2,3
make_bit_list_mic_ko
MBL1 nb= 1
MBL4 wn:tn:nb= 0 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 0 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 0 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 1 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 2 0 [1, 1, 1]
MBL1 nb= 1
MBL2 wn:tn:nb= 3 1 [0]
MBL4 wn:tn:nb= 3 1 [0, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 3 0 [0, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 4 2 [1]
all ones found:wn:4, tn:3, nbt:1, tni:1
nb_tiles 1
a tile in the last fragment but we dont know the tile number
append 1
[1, 0, 1]
find_missing_tiles_mic_ko_yes_all_1 - bit_list -> {0: [1, 1, 1], 1: [1, 1, 1], 2: [1, 1, 1], 3: [0, 1, 1], 4: [1, 0, 1]}, lenght: 5
 i, all(i[1]) (0, [1, 1, 1]),True
 i, all(i[1]) (1, [1, 1, 1]),True
 i, all(i[1]) (2, [1, 1, 1]),True
 i, all(i[1]) (3, [0, 1, 1]),False
 i, all(i[1]) (4, [1, 0, 1]),False
find_missing_tiles_mic_ko_yes_all_1 ret -> [(3, b'\x60'/3), (4, b'\xa0'/3)]
send ack before done [(3, b'\x60'/3), (4, b'\xa0'/3)]
missing wn=3 bitmap=b'\x60'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 3, 'bitmap': b'\x60'/3, 'packet': b'\x05\x66'/15, 'abort': False, 'payload': None}
missing wn=4 bitmap=b'\xa0'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 4, 'bitmap': b'\xa0'/3, 'packet': b'\x05\x8a'/15, 'abort': False, 'payload': None}
Add event [(501, 39, <bound_method 7f91a8b63100 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8b46e40>, 2))]
callback set -> send_packet
EVENT SEND FRAG
1559123649.911964 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 40, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05\x8a'), 1, None, None
251 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 339.84375 < 10 *rate  -> 100
251 [sim] ----------------------- OK -----------------------
251 [sim] send-packet 1->None bytearray(b'\x05\x8a')
[statsct] send-packet 1->None bytearray(b'\x05\x8a')
total_data_send -> 890
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123649.943136, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_KO']
channel_occupancy -> 57057.28000000002
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
251 [node] @0 ----------------------- RECEIVED PACKET -----------------------
251 [node] @0 recv from 1
251 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x8a')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x8a'/16
set_recvbuf -> b'\x05\x8a'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 4, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\xa0'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x8a'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (4, [1, 0, 1])
sent bitmap: (4, [1, 1])
unset_sent_flag
bit_list -> [1, 0, 1]
self.max_w_num:4 win:4, len(bit_list[:-1]):2
last window
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
bi -> 0
bi -> 1
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 1, tn 1
bi -> 2
Problem in tx, the last bit is set as 1
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': False, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123649.980616 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
Add event []
callback set -> ack_timeout
*******event id 42
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 41, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 2
Add event []
callback set -> ack_timeout
*******event id 43
msg_type -> SCHC_ACK_REQ, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ']
SCHC ACK REQ frag: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40'/13, 'abort': False, 'payload': None}
Add event [(751, 43, <bound_method 7f91a8c3ce40 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c7e3c0>, 2))]
callback set -> send_packet
Queue running event -> 42, callback -> ack_timeout
<bound_method 7f91a8c88640 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@'), 0, None, <bound_method 7f91a8c88640 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
501 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 707.03125 < 10 *rate  -> 100
501 [sim] ----------------------- OK -----------------------
501 [sim] send-packet 0->None bytearray(b'\x05@')
[statsct] send-packet 0->None bytearray(b'\x05@')
total_data_send -> 892
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123650.00804, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_REQ']
channel_occupancy -> 58212.35200000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
501 [node] @1 ----------------------- RECEIVED PACKET -----------------------
501 [node] @1 recv from 0
501 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05@')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x40'/16, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x40'/16
set_recvbuf -> b'\x05\x40'/16
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
Received ACK-REQ
XXX need sending ACK back.
resend ack method
{'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3612560977, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 592
schc_frag.mic: bytearray(b'\xcc\x17\xedM'), mic_calced: b'\xd7SNQ'
all-1 received, building ACK
send ack before done [{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}],2,3
make_bit_list_mic_ko
MBL1 nb= 1
MBL4 wn:tn:nb= 0 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 0 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 0 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 1 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 2 0 [1, 1, 1]
MBL1 nb= 1
MBL2 wn:tn:nb= 3 1 [0]
MBL4 wn:tn:nb= 3 1 [0, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 3 0 [0, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 4 2 [1]
all ones found:wn:4, tn:3, nbt:1, tni:1
nb_tiles 1
a tile in the last fragment but we dont know the tile number
append 1
[1, 0, 1]
find_missing_tiles_mic_ko_yes_all_1 - bit_list -> {0: [1, 1, 1], 1: [1, 1, 1], 2: [1, 1, 1], 3: [0, 1, 1], 4: [1, 0, 1]}, lenght: 5
 i, all(i[1]) (0, [1, 1, 1]),True
 i, all(i[1]) (1, [1, 1, 1]),True
 i, all(i[1]) (2, [1, 1, 1]),True
 i, all(i[1]) (3, [0, 1, 1]),False
 i, all(i[1]) (4, [1, 0, 1]),False
find_missing_tiles_mic_ko_yes_all_1 ret -> [(3, b'\x60'/3), (4, b'\xa0'/3)]
send ack before done [(3, b'\x60'/3), (4, b'\xa0'/3)]
missing wn=3 bitmap=b'\x60'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 3, 'bitmap': b'\x60'/3, 'packet': b'\x05\x66'/15, 'abort': False, 'payload': None}
missing wn=4 bitmap=b'\xa0'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 4, 'bitmap': b'\xa0'/3, 'packet': b'\x05\x8a'/15, 'abort': False, 'payload': None}
Add event [(751, 43, <bound_method 7f91a8c3ce40 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c7e3c0>, 2))]
callback set -> send_packet
EVENT SEND FRAG
1559123650.199894 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 44, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05\x8a'), 1, None, None
501 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 781.25 < 10 *rate  -> 100
501 [sim] ----------------------- OK -----------------------
501 [sim] send-packet 1->None bytearray(b'\x05\x8a')
[statsct] send-packet 1->None bytearray(b'\x05\x8a')
total_data_send -> 894
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123650.225559, 'toa_packet': 1155.072}
SCHC_ACK_REQ
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO']
channel_occupancy -> 59367.42400000003
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
501 [node] @0 ----------------------- RECEIVED PACKET -----------------------
501 [node] @0 recv from 1
501 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x8a')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x8a'/16
set_recvbuf -> b'\x05\x8a'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 4, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\xa0'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x8a'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (4, [1, 0, 1])
sent bitmap: (4, [1, 1])
unset_sent_flag
bit_list -> [1, 0, 1]
self.max_w_num:4 win:4, len(bit_list[:-1]):2
last window
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
bi -> 0
bi -> 1
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 1, tn 1
bi -> 2
Problem in tx, the last bit is set as 1
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': False, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123650.263278 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
Add event []
callback set -> ack_timeout
*******event id 46
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 45, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 3
Add event []
callback set -> ack_timeout
*******event id 47
msg_type -> SCHC_ACK_REQ, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ']
SCHC ACK REQ frag: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40'/13, 'abort': False, 'payload': None}
Add event [(1001, 47, <bound_method 7f91a8c09840 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c4b5a0>, 2))]
callback set -> send_packet
Queue running event -> 46, callback -> ack_timeout
<bound_method 7f91a8c55b40 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@'), 0, None, <bound_method 7f91a8c55b40 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
751 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 644.53125 < 10 *rate  -> 100
751 [sim] ----------------------- OK -----------------------
751 [sim] send-packet 0->None bytearray(b'\x05@')
[statsct] send-packet 0->None bytearray(b'\x05@')
total_data_send -> 896
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123650.290683, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ']
channel_occupancy -> 60522.49600000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
751 [node] @1 ----------------------- RECEIVED PACKET -----------------------
751 [node] @1 recv from 0
751 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05@')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x40'/16, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x40'/16
set_recvbuf -> b'\x05\x40'/16
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
Received ACK-REQ
XXX need sending ACK back.
resend ack method
{'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3612560977, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 592
schc_frag.mic: bytearray(b'\xcc\x17\xedM'), mic_calced: b'\xd7SNQ'
all-1 received, building ACK
send ack before done [{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}],2,3
make_bit_list_mic_ko
MBL1 nb= 1
MBL4 wn:tn:nb= 0 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 0 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 0 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 1 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 2 0 [1, 1, 1]
MBL1 nb= 1
MBL2 wn:tn:nb= 3 1 [0]
MBL4 wn:tn:nb= 3 1 [0, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 3 0 [0, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 4 2 [1]
all ones found:wn:4, tn:3, nbt:1, tni:1
nb_tiles 1
a tile in the last fragment but we dont know the tile number
append 1
[1, 0, 1]
find_missing_tiles_mic_ko_yes_all_1 - bit_list -> {0: [1, 1, 1], 1: [1, 1, 1], 2: [1, 1, 1], 3: [0, 1, 1], 4: [1, 0, 1]}, lenght: 5
 i, all(i[1]) (0, [1, 1, 1]),True
 i, all(i[1]) (1, [1, 1, 1]),True
 i, all(i[1]) (2, [1, 1, 1]),True
 i, all(i[1]) (3, [0, 1, 1]),False
 i, all(i[1]) (4, [1, 0, 1]),False
find_missing_tiles_mic_ko_yes_all_1 ret -> [(3, b'\x60'/3), (4, b'\xa0'/3)]
send ack before done [(3, b'\x60'/3), (4, b'\xa0'/3)]
missing wn=3 bitmap=b'\x60'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 3, 'bitmap': b'\x60'/3, 'packet': b'\x05\x66'/15, 'abort': False, 'payload': None}
missing wn=4 bitmap=b'\xa0'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 4, 'bitmap': b'\xa0'/3, 'packet': b'\x05\x8a'/15, 'abort': False, 'payload': None}
Add event [(1001, 47, <bound_method 7f91a8c09840 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c4b5a0>, 2))]
callback set -> send_packet
EVENT SEND FRAG
1559123650.494914 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 48, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05\x8a'), 1, None, None
751 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 335.9375 < 10 *rate  -> 100
751 [sim] ----------------------- OK -----------------------
751 [sim] send-packet 1->None bytearray(b'\x05\x8a')
[statsct] send-packet 1->None bytearray(b'\x05\x8a')
total_data_send -> 898
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123650.51389, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
channel_occupancy -> 61677.56800000002
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
751 [node] @0 ----------------------- RECEIVED PACKET -----------------------
751 [node] @0 recv from 1
751 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x8a')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x8a'/16
set_recvbuf -> b'\x05\x8a'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 4, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\xa0'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x8a'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (4, [1, 0, 1])
sent bitmap: (4, [1, 1])
unset_sent_flag
bit_list -> [1, 0, 1]
self.max_w_num:4 win:4, len(bit_list[:-1]):2
last window
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
bi -> 0
bi -> 1
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 1, tn 1
bi -> 2
Problem in tx, the last bit is set as 1
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': False, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123650.550165 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
Add event []
callback set -> ack_timeout
*******event id 50
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 49, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 4
Add event []
callback set -> ack_timeout
*******event id 51
msg_type -> SCHC_ACK_REQ, msg_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ']
SCHC ACK REQ frag: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40'/13, 'abort': False, 'payload': None}
Add event [(1251, 51, <bound_method 7f91a8bd79a0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c19c60>, 2))]
callback set -> send_packet
Queue running event -> 50, callback -> ack_timeout
<bound_method 7f91a8c23c80 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@'), 0, None, <bound_method 7f91a8c23c80 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1001 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 19.53125 < 10 *rate  -> 100
1001 [sim] ----------------------- KO -----------------------
1001 [sim] packet was lost 0->None
[statsct] packet was lost 0->None bytearray(b'\x05@')
total_data_send -> 900
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': False, 'time': 1559123650.579411, 'toa_packet': 1155.072}
SCHC_ACK_REQ
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ']
channel_occupancy -> 62832.64000000003
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
EVENT SEND FRAG
1559123650.581123 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 52, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 5
Add event []
callback set -> ack_timeout
*******event id 53
msg_type -> SCHC_ACK_REQ, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ']
SCHC ACK REQ frag: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40'/13, 'abort': False, 'payload': None}
Add event [(1501, 53, <bound_method 7f91a8c27560 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c19c60>, 2))]
callback set -> send_packet
Queue running event -> 51, callback -> ack_timeout
<bound_method 7f91a8c2f6e0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@'), 0, None, <bound_method 7f91a8c2f6e0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1251 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 851.5625 < 10 *rate  -> 100
1251 [sim] ----------------------- OK -----------------------
1251 [sim] send-packet 0->None bytearray(b'\x05@')
[statsct] send-packet 0->None bytearray(b'\x05@')
total_data_send -> 902
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123650.6084, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ']
channel_occupancy -> 63987.71200000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1251 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1251 [node] @1 recv from 0
1251 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05@')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x40'/16, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x40'/16
set_recvbuf -> b'\x05\x40'/16
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
Received ACK-REQ
XXX need sending ACK back.
resend ack method
{'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3612560977, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 592
schc_frag.mic: bytearray(b'\xcc\x17\xedM'), mic_calced: b'\xd7SNQ'
all-1 received, building ACK
send ack before done [{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}],2,3
make_bit_list_mic_ko
MBL1 nb= 1
MBL4 wn:tn:nb= 0 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 0 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 0 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 1 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 2 0 [1, 1, 1]
MBL1 nb= 1
MBL2 wn:tn:nb= 3 1 [0]
MBL4 wn:tn:nb= 3 1 [0, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 3 0 [0, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 4 2 [1]
all ones found:wn:4, tn:3, nbt:1, tni:1
nb_tiles 1
a tile in the last fragment but we dont know the tile number
append 1
[1, 0, 1]
find_missing_tiles_mic_ko_yes_all_1 - bit_list -> {0: [1, 1, 1], 1: [1, 1, 1], 2: [1, 1, 1], 3: [0, 1, 1], 4: [1, 0, 1]}, lenght: 5
 i, all(i[1]) (0, [1, 1, 1]),True
 i, all(i[1]) (1, [1, 1, 1]),True
 i, all(i[1]) (2, [1, 1, 1]),True
 i, all(i[1]) (3, [0, 1, 1]),False
 i, all(i[1]) (4, [1, 0, 1]),False
find_missing_tiles_mic_ko_yes_all_1 ret -> [(3, b'\x60'/3), (4, b'\xa0'/3)]
send ack before done [(3, b'\x60'/3), (4, b'\xa0'/3)]
missing wn=3 bitmap=b'\x60'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 3, 'bitmap': b'\x60'/3, 'packet': b'\x05\x66'/15, 'abort': False, 'payload': None}
missing wn=4 bitmap=b'\xa0'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 4, 'bitmap': b'\xa0'/3, 'packet': b'\x05\x8a'/15, 'abort': False, 'payload': None}
Add event [(1501, 53, <bound_method 7f91a8c27560 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8c19c60>, 2))]
callback set -> send_packet
EVENT SEND FRAG
1559123650.808422 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 54, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05\x8a'), 1, None, None
1251 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 718.75 < 10 *rate  -> 100
1251 [sim] ----------------------- OK -----------------------
1251 [sim] send-packet 1->None bytearray(b'\x05\x8a')
[statsct] send-packet 1->None bytearray(b'\x05\x8a')
total_data_send -> 904
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123650.828809, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
channel_occupancy -> 65142.78400000002
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
1251 [node] @0 ----------------------- RECEIVED PACKET -----------------------
1251 [node] @0 recv from 1
1251 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x8a')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x8a'/16
set_recvbuf -> b'\x05\x8a'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 4, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\xa0'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x8a'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (4, [1, 0, 1])
sent bitmap: (4, [1, 1])
unset_sent_flag
bit_list -> [1, 0, 1]
self.max_w_num:4 win:4, len(bit_list[:-1]):2
last window
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
bi -> 0
bi -> 1
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 1, tn 1
bi -> 2
Problem in tx, the last bit is set as 1
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': False, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123650.864057 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
Add event []
callback set -> ack_timeout
*******event id 56
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 55, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 6
Add event []
callback set -> ack_timeout
*******event id 57
msg_type -> SCHC_ACK_REQ, msg_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ']
SCHC ACK REQ frag: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40'/13, 'abort': False, 'payload': None}
Add event [(1751, 57, <bound_method 7f91a8bb3320 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8bf4ea0>, 2))]
callback set -> send_packet
Queue running event -> 56, callback -> ack_timeout
<bound_method 7f91a8bffe60 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@'), 0, None, <bound_method 7f91a8bffe60 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1501 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 50.78125 < 10 *rate  -> 100
1501 [sim] ----------------------- KO -----------------------
1501 [sim] packet was lost 0->None
[statsct] packet was lost 0->None bytearray(b'\x05@')
total_data_send -> 906
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': False, 'time': 1559123650.894042, 'toa_packet': 1155.072}
SCHC_ACK_REQ
msg_type_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ']
channel_occupancy -> 66297.85600000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
EVENT SEND FRAG
1559123650.896142 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 58, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 7
Add event []
callback set -> ack_timeout
*******event id 59
msg_type -> SCHC_ACK_REQ, msg_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ']
SCHC ACK REQ frag: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40'/13, 'abort': False, 'payload': None}
Add event [(2001, 59, <bound_method 7f91a8c02bc0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8bf4ea0>, 2))]
callback set -> send_packet
Queue running event -> 57, callback -> ack_timeout
<bound_method 7f91a8c0b560 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@'), 0, None, <bound_method 7f91a8c0b560 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
1751 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 398.4375 < 10 *rate  -> 100
1751 [sim] ----------------------- OK -----------------------
1751 [sim] send-packet 0->None bytearray(b'\x05@')
[statsct] send-packet 0->None bytearray(b'\x05@')
total_data_send -> 908
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123650.922941, 'toa_packet': 1155.072}
SCHC_ACK_REQ
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ']
channel_occupancy -> 67452.92800000001
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
1751 [node] @1 ----------------------- RECEIVED PACKET -----------------------
1751 [node] @1 recv from 0
1751 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05@')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x40'/16, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x40'/16
set_recvbuf -> b'\x05\x40'/16
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
Received ACK-REQ
XXX need sending ACK back.
resend ack method
{'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3612560977, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 592
schc_frag.mic: bytearray(b'\xcc\x17\xedM'), mic_calced: b'\xd7SNQ'
all-1 received, building ACK
send ack before done [{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}],2,3
make_bit_list_mic_ko
MBL1 nb= 1
MBL4 wn:tn:nb= 0 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 0 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 0 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 1 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 2 0 [1, 1, 1]
MBL1 nb= 1
MBL2 wn:tn:nb= 3 1 [0]
MBL4 wn:tn:nb= 3 1 [0, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 3 0 [0, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 4 2 [1]
all ones found:wn:4, tn:3, nbt:1, tni:1
nb_tiles 1
a tile in the last fragment but we dont know the tile number
append 1
[1, 0, 1]
find_missing_tiles_mic_ko_yes_all_1 - bit_list -> {0: [1, 1, 1], 1: [1, 1, 1], 2: [1, 1, 1], 3: [0, 1, 1], 4: [1, 0, 1]}, lenght: 5
 i, all(i[1]) (0, [1, 1, 1]),True
 i, all(i[1]) (1, [1, 1, 1]),True
 i, all(i[1]) (2, [1, 1, 1]),True
 i, all(i[1]) (3, [0, 1, 1]),False
 i, all(i[1]) (4, [1, 0, 1]),False
find_missing_tiles_mic_ko_yes_all_1 ret -> [(3, b'\x60'/3), (4, b'\xa0'/3)]
send ack before done [(3, b'\x60'/3), (4, b'\xa0'/3)]
missing wn=3 bitmap=b'\x60'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 3, 'bitmap': b'\x60'/3, 'packet': b'\x05\x66'/15, 'abort': False, 'payload': None}
missing wn=4 bitmap=b'\xa0'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 4, 'bitmap': b'\xa0'/3, 'packet': b'\x05\x8a'/15, 'abort': False, 'payload': None}
Add event [(2001, 59, <bound_method 7f91a8c02bc0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8bf4ea0>, 2))]
callback set -> send_packet
EVENT SEND FRAG
1559123651.109451 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 60, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05\x8a'), 1, None, None
1751 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 367.1875 < 10 *rate  -> 100
1751 [sim] ----------------------- OK -----------------------
1751 [sim] send-packet 1->None bytearray(b'\x05\x8a')
[statsct] send-packet 1->None bytearray(b'\x05\x8a')
total_data_send -> 910
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123651.131155, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
channel_occupancy -> 68608.00000000002
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
1751 [node] @0 ----------------------- RECEIVED PACKET -----------------------
1751 [node] @0 recv from 1
1751 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x8a')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x8a'/16
set_recvbuf -> b'\x05\x8a'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 4, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\xa0'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x8a'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (4, [1, 0, 1])
sent bitmap: (4, [1, 1])
unset_sent_flag
bit_list -> [1, 0, 1]
self.max_w_num:4 win:4, len(bit_list[:-1]):2
last window
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
bi -> 0
bi -> 1
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 1, tn 1
bi -> 2
Problem in tx, the last bit is set as 1
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': False, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123651.179121 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
Add event []
callback set -> ack_timeout
*******event id 62
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 61, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 8
Add event []
callback set -> ack_timeout
*******event id 63
msg_type -> SCHC_ACK_REQ, msg_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ']
SCHC ACK REQ frag: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x40'/13, 'abort': False, 'payload': None}
Add event [(2251, 63, <bound_method 7f91a8b8fac0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8bd0e80>, 2))]
callback set -> send_packet
Queue running event -> 62, callback -> ack_timeout
<bound_method 7f91a8bdb7c0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>> AAAAAAA
send packet from queue -> bytearray(b'\x05@'), 0, None, <bound_method 7f91a8bdb7c0 <FragmentAckOnError object at 7f91a8c25120>.<function event_sent_frag at 0x7f91a8aeada0>>
2001 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 203.125 < 10 *rate  -> 100
2001 [sim] ----------------------- OK -----------------------
2001 [sim] send-packet 0->None bytearray(b'\x05@')
[statsct] send-packet 0->None bytearray(b'\x05@')
total_data_send -> 912
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123651.201246, 'toa_packet': 1155.072}
SCHC_ACK_KO
msg_type_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ']
channel_occupancy -> 69763.07200000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
2001 [node] @1 ----------------------- RECEIVED PACKET -----------------------
2001 [node] @1 recv from 0
2001 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05@')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x40'/16, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x40'/16
set_recvbuf -> b'\x05\x40'/16
FCN ALL-0 found!
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
Received ACK-REQ
XXX need sending ACK back.
resend ack method
{'rule_id': 1, 'packet_bbuf': b'\x05\x40'/3[13:16], 'mic': None, 'payload': None, 'ack_request': True, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': False, 'fcn': 0, 'cbit': None, 'dtag': 1, 'win': 2}
tile_list:
{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}
{'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}
{'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}
{'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}
MIC calculation:
Recv MIC 3612560977, base = bytearray(b'\xa0 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x177Ww\x97\xb7\xd7\xf8\x188Xx\x98\xb8\xd8\xf9\x199Yy\x99\xb9\xd9\xfa\x1a:Zz\x9a\xba\xda\xfb\x1b;[{\x9b\xbb\xdb\xfc\x1c<\\|\x9c\xbc\xdc\xfd\x1d=]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x100Pp\x90\xb0\xd0\xf1\x111Qq\x91\xb1\xd1\xf2\x122Rr\x92\xb2\xd2\xf3\x133Ss\x93\xb3\xd3\xf4\x144Tt\x94\xb4\xd4\xf5\x155Uu\x95\xb5\xd5\xf6\x166Vv\x96\xb6\xd6\xf7\x17]}\x9d\xbd\xdd\xfe\x1e>^~\x9e\xbe\xde\xff\x1f?_\x7f\x9f\xbf\xdf\xe0\x00 @`\x80\xa0\xc0\xe1\x01!Aa\x81\xa1\xc1\xe2\x02"Bb\x82\xa2\xc2\xe3\x03#Cc\x83\xa3\xc3\xe4\x04$Dd\x84\xa4\xc4\xe5\x05%Ee\x85\xa5\xc5\xe6\x06&Ff\x86\xa6\xc6\xe7\x07\'Gg\x87\xa7\xc7\xe8\x08(Hh\x88\xa8\xc8\xe9\t)Ii\x89\xa9\xc9\xea\n*Jj\x8a\xaa\xca\xeb\x0b+Kk\x8b\xab\xcb\xec\x0c,Ll\x8c\xac\xcc\xed\r-Mm\x8d\xad\xcd\xee\x0e.Nn\x8e\xae\xce\xef\x0f/Oo\x8f\xaf\xcf\xf0\x00'), lenght = 592
schc_frag.mic: bytearray(b'\xcc\x17\xedM'), mic_calced: b'\xd7SNQ'
all-1 received, building ACK
send ack before done [{'raw_tiles': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x00'/395, 'w-num': 0, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x00'/395, 'w-num': 0, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x00'/395, 'w-num': 0, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x00'/395, 'w-num': 1, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\x00'/395, 'w-num': 1, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\x00'/395, 'w-num': 1, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\x00'/395, 'w-num': 2, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x00'/395, 'w-num': 2, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x00'/395, 'w-num': 2, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x00'/395, 'w-num': 3, 't-num': 1, 'nb_tiles': 1}, {'raw_tiles': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x00'/395, 'w-num': 3, 't-num': 0, 'nb_tiles': 1}, {'raw_tiles': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\x00'/395, 'w-num': 4, 't-num': 2, 'nb_tiles': 1}, {'raw_tiles': b'\xaf\xcf\xf0\x00'/27, 'w-num': 4, 't-num': 3, 'nb_tiles': 1}],2,3
make_bit_list_mic_ko
MBL1 nb= 1
MBL4 wn:tn:nb= 0 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 0 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 0 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 1 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 1 0 [1, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 2 [1]
MBL1 nb= 1
MBL4 wn:tn:nb= 2 1 [1, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 2 0 [1, 1, 1]
MBL1 nb= 1
MBL2 wn:tn:nb= 3 1 [0]
MBL4 wn:tn:nb= 3 1 [0, 1]
MBL1 nb= 1
MBL3 wn:tn:nb= 3 0 [0, 1, 1]
MBL1 nb= 1
MBL4 wn:tn:nb= 4 2 [1]
all ones found:wn:4, tn:3, nbt:1, tni:1
nb_tiles 1
a tile in the last fragment but we dont know the tile number
append 1
[1, 0, 1]
find_missing_tiles_mic_ko_yes_all_1 - bit_list -> {0: [1, 1, 1], 1: [1, 1, 1], 2: [1, 1, 1], 3: [0, 1, 1], 4: [1, 0, 1]}, lenght: 5
 i, all(i[1]) (0, [1, 1, 1]),True
 i, all(i[1]) (1, [1, 1, 1]),True
 i, all(i[1]) (2, [1, 1, 1]),True
 i, all(i[1]) (3, [0, 1, 1]),False
 i, all(i[1]) (4, [1, 0, 1]),False
find_missing_tiles_mic_ko_yes_all_1 ret -> [(3, b'\x60'/3), (4, b'\xa0'/3)]
send ack before done [(3, b'\x60'/3), (4, b'\xa0'/3)]
missing wn=3 bitmap=b'\x60'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 3, 'bitmap': b'\x60'/3, 'packet': b'\x05\x66'/15, 'abort': False, 'payload': None}
missing wn=4 bitmap=b'\xa0'/3
msg_type -> SCHC_ACK_KO, msg_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
----------------------- SCHC ACK KO SEND  -----------------------
ACK failure sent: {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': 0, 'mic': None, 'win': 4, 'bitmap': b'\xa0'/3, 'packet': b'\x05\x8a'/15, 'abort': False, 'payload': None}
Add event [(2251, 63, <bound_method 7f91a8b8fac0 <FragmentAckOnError object at 7f91a8c25120>.<function ack_timeout at 0x7f91a8aead80>>, (<frag_sender_tx object at 7f91a8bd0e80>, 2))]
callback set -> send_packet
EVENT SEND FRAG
1559123651.403445 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 64, callback -> send_packet
None AAAAAAA
send packet from queue -> bytearray(b'\x05\x8a'), 1, None, None
2001 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 707.03125 < 10 *rate  -> 100
2001 [sim] ----------------------- OK -----------------------
2001 [sim] send-packet 1->None bytearray(b'\x05\x8a')
[statsct] send-packet 1->None bytearray(b'\x05\x8a')
total_data_send -> 914
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123651.406888, 'toa_packet': 1155.072}
SCHC_ACK_REQ
msg_type_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO']
channel_occupancy -> 70918.14400000001
src_dev_id 1 , Statsct.src_id 0
packet added to receiver list
2001 [node] @0 ----------------------- RECEIVED PACKET -----------------------
2001 [node] @0 recv from 1
2001 [schc] @0 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05\x8a')
Warning: Comparison between bytes and str
key,rule fragSender,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Fragmentation session found <FragmentAckOnError object at 7f91a8c25120>
----------------------- cancel_ack_wait_timer -----------------------
frag_sender_rx
b'\x05\x8a'/16
set_recvbuf -> b'\x05\x8a'/16
-----------------------  sender frag received -----------------------
fragment received -> {'ack_request': False, 'payload': None, 'packet': None, 'win': 4, 'remaining': b'\x00'/1, 'cbit': 0, 'mic': None, 'abort': False, 'fcn': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': b'\xa0'/3, 'dtag': 1, 'rule_id': 1, 'packet_bbuf': b'\x05\x8a'/0[16:16]}
----------------------- ACK Failure rid=1 dtag=1 -----------------------
recv bitmap: (4, [1, 0, 1])
sent bitmap: (4, [1, 1])
unset_sent_flag
bit_list -> [1, 0, 1]
self.max_w_num:4 win:4, len(bit_list[:-1]):2
last window
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
bi -> 0
bi -> 1
unset_sent_flag_do
t-num 2 == max_fcn 2
counter = 1, t-num 1, tn 1
bi -> 2
Problem in tx, the last bit is set as 1
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': False, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
self.all_tiles -> [{'sent': True, 'w-num': 0, 't-num': 2, 'tile': b'\xa0\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06'/392}, {'sent': True, 'w-num': 0, 't-num': 1, 'tile': b'\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c'/392}, {'sent': True, 'w-num': 0, 't-num': 0, 'tile': b'\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52'/392}, {'sent': True, 'w-num': 1, 't-num': 2, 'tile': b'\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78'/392}, {'sent': True, 'w-num': 1, 't-num': 1, 'tile': b'\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e'/392}, {'sent': True, 'w-num': 1, 't-num': 0, 'tile': b'\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4'/392}, {'sent': True, 'w-num': 2, 't-num': 2, 'tile': b'\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca'/392}, {'sent': True, 'w-num': 2, 't-num': 1, 'tile': b'\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f\xaf\xcf\xf0\x10\x30\x50\x70\x90\xb0\xd0\xf1'/392}, {'sent': True, 'w-num': 2, 't-num': 0, 'tile': b'\x11\x31\x51\x71\x91\xb1\xd1\xf2\x12\x32\x52\x72\x92\xb2\xd2\xf3\x13\x33\x53\x73\x93\xb3\xd3\xf4\x14\x34\x54\x74\x94\xb4\xd4\xf5\x15\x35\x55\x75\x95\xb5\xd5\xf6\x16\x36\x56\x76\x96\xb6\xd6\xf7\x17'/392}, {'sent': True, 'w-num': 3, 't-num': 2, 'tile': b'\x37\x57\x77\x97\xb7\xd7\xf8\x18\x38\x58\x78\x98\xb8\xd8\xf9\x19\x39\x59\x79\x99\xb9\xd9\xfa\x1a\x3a\x5a\x7a\x9a\xba\xda\xfb\x1b\x3b\x5b\x7b\x9b\xbb\xdb\xfc\x1c\x3c\x5c\x7c\x9c\xbc\xdc\xfd\x1d\x3d'/392}, {'sent': True, 'w-num': 3, 't-num': 1, 'tile': b'\x5d\x7d\x9d\xbd\xdd\xfe\x1e\x3e\x5e\x7e\x9e\xbe\xde\xff\x1f\x3f\x5f\x7f\x9f\xbf\xdf\xe0\x00\x20\x40\x60\x80\xa0\xc0\xe1\x01\x21\x41\x61\x81\xa1\xc1\xe2\x02\x22\x42\x62\x82\xa2\xc2\xe3\x03\x23\x43'/392}, {'sent': True, 'w-num': 3, 't-num': 0, 'tile': b'\x63\x83\xa3\xc3\xe4\x04\x24\x44\x64\x84\xa4\xc4\xe5\x05\x25\x45\x65\x85\xa5\xc5\xe6\x06\x26\x46\x66\x86\xa6\xc6\xe7\x07\x27\x47\x67\x87\xa7\xc7\xe8\x08\x28\x48\x68\x88\xa8\xc8\xe9\x09\x29\x49\x69'/392}, {'sent': True, 'w-num': 4, 't-num': 2, 'tile': b'\x89\xa9\xc9\xea\x0a\x2a\x4a\x6a\x8a\xaa\xca\xeb\x0b\x2b\x4b\x6b\x8b\xab\xcb\xec\x0c\x2c\x4c\x6c\x8c\xac\xcc\xed\x0d\x2d\x4d\x6d\x8d\xad\xcd\xee\x0e\x2e\x4e\x6e\x8e\xae\xce\xef\x0f\x2f\x4f\x6f\x8f'/392}, {'sent': True, 'w-num': 4, 't-num': 1, 'tile': b'\xaf\xcf\xf0\x00'/27}]
1559123651.457447 send_frag!!!!!!!!!!!!!!!!!
all1_send-> True, resend -> True, state -> ACK_FAILURE
all tiles unsend -> <TileList object at 7f91a8c3a380>
w: 0, t: 2, sent: True
w: 0, t: 1, sent: True
w: 0, t: 0, sent: True
w: 1, t: 2, sent: True
w: 1, t: 1, sent: True
w: 1, t: 0, sent: True
w: 2, t: 2, sent: True
w: 2, t: 1, sent: True
w: 2, t: 0, sent: True
w: 3, t: 2, sent: True
w: 3, t: 1, sent: True
w: 3, t: 0, sent: True
w: 4, t: 2, sent: True
w: 4, t: 1, sent: True
window tiles: None, nb_remaining_tiles: 0, remaining_size: 395
no more tiles to resend
Add event []
callback set -> ack_timeout
*******event id 66
self.mic_sent is not None state -> ACK_FAILURE
----------------------- all tiles have been sent ----------------------- None 0 395
Queue running event -> 65, callback -> send_packet
----------------------- cancel_ack_wait_timer -----------------------
----------------------- ACK timeout -----------------------
ack_requests_counter -> 9
Sent Sender-Abort. {'fcn': None, 'rule_id': 1, 'ack_request': False, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'dtag': 1, 'cbit': None, 'mic': None, 'win': 2, 'bitmap': None, 'packet': b'\x05\x58'/13, 'abort': False, 'payload': None}
msg_type -> SCHC_SENDER_ABORT, msg_queue -> ['SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_SENDER_ABORT']
Add event []
callback set -> send_packet
Queue running event -> 66, callback -> ack_timeout
None AAAAAAA
send packet from queue -> bytearray(b'\x05X'), 0, None, None
2251 [sim] ----------------------- SEND PACKET -----------------------
1000*random_num -> 179.6875 < 10 *rate  -> 100
2251 [sim] ----------------------- OK -----------------------
2251 [sim] send-packet 0->None bytearray(b'\x05X')
[statsct] send-packet 0->None bytearray(b'\x05X')
total_data_send -> 916
[statsct] {'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05X'), 'status': True, 'time': 1559123651.494431, 'toa_packet': 1155.072}
SCHC_ACK_REQ
msg_type_queue -> ['SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_ACK_REQ', 'SCHC_ACK_KO', 'SCHC_ACK_KO', 'SCHC_SENDER_ABORT']
channel_occupancy -> 72073.21600000002
src_dev_id 0 , Statsct.src_id 0
packet added to sender list
2251 [node] @1 ----------------------- RECEIVED PACKET -----------------------
2251 [node] @1 recv from 0
2251 [schc] @1 recv-from-L2 b'\xaa\xbb\xcc\xdd' bytearray(b'\x05X')
Warning: Comparison between bytes and str
key,rule fragReceiver,{"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
rule.ruleID -> 1,rule.ruleLength-> 6, dtag -> 1
Reassembly session found <ReassemblerAckOnError object at 7f91a8ca1a60>
state: INIT, recieved fragment -> b'\x05\x58'/16, rule-> {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}
frag_receiver_rx
b'\x05\x58'/16
set_recvbuf -> b'\x05\x58'/16
receiver frag received: {'rule_id': 1, 'packet_bbuf': b'\x05\x58'/3[13:16], 'mic': None, 'payload': None, 'ack_request': False, 'packet': None, 'rule': {"fragmentation": {"FRMode": "ackOnError", "FRModeProfile": {"ackBehavior": "afterAll1", "MICWordSize": 8, "MICAlgorithm": "crc32", "FCNSize": 2, "windowSize": 3, "tileSize": 392, "dtagSize": 2, "WSize": 3}}, "profile": {"L2WordSize": 8}, "ruleID": 1, "ruleLength": 6}, 'bitmap': None, 'abort': True, 'fcn': 3, 'cbit': None, 'dtag': 1, 'win': 2}
Received Sender-Abort.
Queue running event -> 67, callback -> send_packet
simulation ended
Sender Packet list
print_packet_list
0,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), 'status': False, 'header_size': 13, 'time': 1559123647.879746, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
1,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05\t23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`a`'), 'status': True, 'header_size': 13, 'time': 1559123647.92209, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
2,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05\x02cdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x90'), 'status': True, 'header_size': 13, 'time': 1559123647.988931, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
3,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x053\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc0'), 'status': True, 'header_size': 13, 'time': 1559123648.066713, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
4,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05,\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf0'), 'status': True, 'header_size': 13, 'time': 1559123648.134607, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
5,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), 'status': False, 'header_size': 13, 'time': 1559123648.199749, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
6,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), 'status': False, 'header_size': 13, 'time': 1559123648.233756, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
7,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), 'status': False, 'header_size': 13, 'time': 1559123648.267085, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
8,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05@\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb8'), 'status': True, 'header_size': 13, 'time': 1559123648.30103, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
9,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05q\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xe8'), 'status': False, 'header_size': 13, 'time': 1559123648.365464, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
10,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05j\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x18'), 'status': True, 'header_size': 13, 'time': 1559123648.403533, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
11,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05c\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKH'), 'status': True, 'header_size': 13, 'time': 1559123648.48477, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
12,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05\x94MNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|x'), 'status': True, 'header_size': 13, 'time': 1559123648.548862, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
13,{'toa_calculator': {'t_payload': 1081.344, 'v_ceil': 4.3, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 33, 'v_DE': 1, 't_packet': 1482.752, 't_sym': 32.768}, 'time_off': 146792.448, 'dst_dev_id': None, 'toa_packet': 1482.752, 'packet': bytearray(b'\x05\x9e`\xbfjm~\x7f\x80'), 'status': True, 'header_size': 45, 'time': 1559123648.617984, 'src_dev_id': 0, 'packet_length': 9, 'msg_type': 'SCHC_ALL_1'}
14,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'time_off': 276553.728, 'dst_dev_id': None, 'toa_packet': 2793.472, 'packet': bytearray(b'\x05\x15\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./00'), 'status': True, 'header_size': 13, 'time': 1559123649.126075, 'src_dev_id': 0, 'packet_length': 51, 'msg_type': 'SCHC_FRAG'}
15,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'time_off': 276553.728, 'msg_type': 'SCHC_FRAG', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05%\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$% '), 'status': True, 'time': 1559123649.27216, 'toa_packet': 2793.472}
16,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'time_off': 276553.728, 'msg_type': 'SCHC_FRAG', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b"\x05V'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVP"), 'status': True, 'time': 1559123649.41943, 'toa_packet': 2793.472}
17,{'toa_calculator': {'t_payload': 2392.064, 'v_ceil': 12.7, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 73, 'v_DE': 1, 't_packet': 2793.472, 't_sym': 32.768}, 'packet_length': 51, 'time_off': 276553.728, 'msg_type': 'SCHC_FRAG', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05OXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88'), 'status': True, 'time': 1559123649.561927, 'toa_packet': 2793.472}
18,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_REQ', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123649.706095, 'toa_packet': 1155.072}
19,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123650.00804, 'toa_packet': 1155.072}
20,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123650.290683, 'toa_packet': 1155.072}
21,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_REQ', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': False, 'time': 1559123650.579411, 'toa_packet': 1155.072}
22,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123650.6084, 'toa_packet': 1155.072}
23,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_REQ', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': False, 'time': 1559123650.894042, 'toa_packet': 1155.072}
24,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_REQ', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123650.922941, 'toa_packet': 1155.072}
25,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05@'), 'status': True, 'time': 1559123651.201246, 'toa_packet': 1155.072}
26,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_REQ', 'dst_dev_id': None, 'src_dev_id': 0, 'packet': bytearray(b'\x05X'), 'status': True, 'time': 1559123651.494431, 'toa_packet': 1155.072}
Receiver Packet list
print_packet_list
0,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x06'), 'status': True, 'time': 1559123648.868911, 'toa_packet': 1155.072}
1,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'time_off': 114352.128, 'dst_dev_id': None, 'toa_packet': 1155.072, 'packet': bytearray(b'\x05,'), 'status': True, 'header_size': 13, 'time': 1559123648.916402, 'src_dev_id': 1, 'packet_length': 2, 'msg_type': 'SCHC_ACK_KO'}
2,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'time_off': 114352.128, 'dst_dev_id': None, 'toa_packet': 1155.072, 'packet': bytearray(b'\x05B'), 'status': True, 'header_size': 13, 'time': 1559123648.97784, 'src_dev_id': 1, 'packet_length': 2, 'msg_type': 'SCHC_ACK_KO'}
3,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'time_off': 114352.128, 'dst_dev_id': None, 'toa_packet': 1155.072, 'packet': bytearray(b'\x05f'), 'status': False, 'header_size': 13, 'time': 1559123649.033347, 'src_dev_id': 1, 'packet_length': 2, 'msg_type': 'SCHC_ACK_KO'}
4,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123649.044303, 'toa_packet': 1155.072}
5,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123649.943136, 'toa_packet': 1155.072}
6,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_REQ', 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123650.225559, 'toa_packet': 1155.072}
7,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123650.51389, 'toa_packet': 1155.072}
8,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123650.828809, 'toa_packet': 1155.072}
9,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_KO', 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123651.131155, 'toa_packet': 1155.072}
10,{'toa_calculator': {'t_payload': 753.664, 'v_ceil': 2.9, 't_preamble': 401.408, 'n_preamble': 8, 'r_sym': 30.517578125, 'n_sym_payload': 23, 'v_DE': 1, 't_packet': 1155.072, 't_sym': 32.768}, 'packet_length': 2, 'time_off': 114352.128, 'msg_type': 'SCHC_ACK_REQ', 'dst_dev_id': None, 'src_dev_id': 1, 'packet': bytearray(b'\x05\x8a'), 'status': True, 'time': 1559123651.406888, 'toa_packet': 1155.072}
Results
print_ordered_packets
0:1559123647.879746:,source:0,toa_packet: 2793.472, time off: 276553.728,status: False, packet_length:51, msg_type: SCHC_FRAG
1:1559123647.92209:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
2:1559123647.988931:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
3:1559123648.066713:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
4:1559123648.134607:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
5:1559123648.199749:,source:0,toa_packet: 2793.472, time off: 276553.728,status: False, packet_length:51, msg_type: SCHC_FRAG
6:1559123648.233756:,source:0,toa_packet: 2793.472, time off: 276553.728,status: False, packet_length:51, msg_type: SCHC_FRAG
7:1559123648.267085:,source:0,toa_packet: 2793.472, time off: 276553.728,status: False, packet_length:51, msg_type: SCHC_FRAG
8:1559123648.30103:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
9:1559123648.365464:,source:0,toa_packet: 2793.472, time off: 276553.728,status: False, packet_length:51, msg_type: SCHC_FRAG
10:1559123648.403533:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
11:1559123648.48477:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
12:1559123648.548862:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
13:1559123648.617984:,source:0,toa_packet: 1482.752, time off: 146792.448,status: True, packet_length:9, msg_type: SCHC_ALL_1
14:1559123648.868911:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
15:1559123648.916402:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
16:1559123648.97784:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
17:1559123649.033347:,source:1,toa_packet: 1155.072, time off: 114352.128,status: False, packet_length:2, msg_type: SCHC_ACK_KO
18:1559123649.044303:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
19:1559123649.126075:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
20:1559123649.27216:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
21:1559123649.41943:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
22:1559123649.561927:,source:0,toa_packet: 2793.472, time off: 276553.728,status: True, packet_length:51, msg_type: SCHC_FRAG
23:1559123649.706095:,source:0,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_REQ
24:1559123649.943136:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
25:1559123650.00804:,source:0,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
26:1559123650.225559:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_REQ
27:1559123650.290683:,source:0,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
28:1559123650.51389:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
29:1559123650.579411:,source:0,toa_packet: 1155.072, time off: 114352.128,status: False, packet_length:2, msg_type: SCHC_ACK_REQ
30:1559123650.6084:,source:0,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
31:1559123650.828809:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
32:1559123650.894042:,source:0,toa_packet: 1155.072, time off: 114352.128,status: False, packet_length:2, msg_type: SCHC_ACK_REQ
33:1559123650.922941:,source:0,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_REQ
34:1559123651.131155:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
35:1559123651.201246:,source:0,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_KO
36:1559123651.406888:,source:1,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_REQ
37:1559123651.494431:,source:0,toa_packet: 1155.072, time off: 114352.128,status: True, packet_length:2, msg_type: SCHC_ACK_REQ
performance metrics
print_ordered_fragments
total_time_off -> 5763022.847999999, sender_toa -> 59367.42400000003
ACK_OK_TOA: 0, ACK_KO_TOA: 1155.072, RECEIVER_ABORT_TOA: 0 => Total GW Time: 0
total_time_off_receiver -> 1143521.28 receiver_toa -> 12705.792
Channel Ocuppancy -> 72073.21600000002
total_data_send -> 916, packet_length -> 640